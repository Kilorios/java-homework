package lesson1;


public class B_Vars {
    static void novars() {
        System.out.println(100000 * 1.1 * 1.1);
    }

    static void vars() {
        // Создание переменной:
        // <тип_данных> <имя_переменной>
        // Правила для имён переменных:
        //      начинается с буквы
        //      после первого символа возможно использовать все буквы, все цифры и '_'
        //      регистр имеет значение, т.е. Sum =/= sum
        int sum;
        int Sum; // никак не связана с переменной sum
        double percent = 1.1; // создание И инициализация в одной строке

        // Инициализация переменной (задание значения):
        // <имя_переменной> = <значение/выражение>
        // '=' - это операция присваивания, то есть задания значения переменной
        sum = 100000;
        // percent = 1 + 10/100.0;

        // Выполнение вычислений
        System.out.println(sum * percent * percent);
    }

    static void prim_types() {
        // Целые числа
        // byte 8 бит [-128..127]
        byte b = -128;
        b = 7;

        // short 16 бит [-32768..32767]
        short s = 32767;

        // int 32 бит [-(2^31)..(2^31)-1]
        int i = 1231231231;

        // long 64 бит [-(2^63)..(2^63)-1]
        long l = 1231231231231231231L;

        // Дробные числа
        // float 32 бит
        float f = 1.1f;

        // double 64 бит
        double d = 1.1;
        double d1 = 2.5e3;
        System.out.println(d1);

        // Логический тип данных
        // boolean 1 бит
        boolean b1 = true;

        // Символьный тип данных
        // char 16 бит
        char c = '\u0216';
        char c1 = (char) (c + 1);
        System.out.println(c);
        System.out.println(c1);
    }

    /*
    Создайте две переменных:
        целое число, больше чем 3 000 000 000
        дробное число одинарной точности
    Выведите результат их деления
     */
    static void task1() {
        long A = 30_000_000_001L;
        float B = 3.5f;

        System.out.println(A / B);
    }

    static void ieee_float() {
        // Дробные числа подчиняются стандарту IEEE754, то есть хранятся с определенной точностью
        // Из-за этого не все операции, которые нам кажутся логичными, будут выполняться "правильно"
        System.out.println(0.1 + 0.2 == 0.3);
        // Теоретически можно избежать таких ошибок подобным кодом
        // Но лучше всего при необходимости использовать специализированные пакеты и модули,
        //  написанные математиками и способные на точную арифметику с дробными числами
        System.out.println(0.1 + 0.2 - 0.3 < 1e-16);
    }

    static void priv() {
        int i = 130;
        // Явное преобразование из int в byte
        byte j = (byte)(i + 1);
        System.out.println(j);

        long l = 30_000_000_000L;
        // Явное преобразование из long в int
        System.out.println((int) l);

        // Неявное преобразование 125 в long
        long l1 = 125 + 20L;
        System.out.println(l1);

        // Неявное преобразование int в short
        byte a = 127;
        // Операция произведения двух byte даёт int, после этого явное преобразование int в short
        short s = (short) (a * a);
    }
}
